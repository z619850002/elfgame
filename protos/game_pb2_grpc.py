# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import game_pb2 as game__pb2
from google.rpc import status_pb2 as google_dot_rpc_dot_status__pb2


class GameStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.NewGC = channel.unary_unary(
        '/pytorch.elf.game.v1.Game/NewGC',
        request_serializer=game__pb2.Player.SerializeToString,
        response_deserializer=google_dot_rpc_dot_status__pb2.Status.FromString,
        )
    self.FreeGC = channel.unary_unary(
        '/pytorch.elf.game.v1.Game/FreeGC',
        request_serializer=game__pb2.Player.SerializeToString,
        response_deserializer=google_dot_rpc_dot_status__pb2.Status.FromString,
        )
    self.ClearBoard = channel.unary_unary(
        '/pytorch.elf.game.v1.Game/ClearBoard',
        request_serializer=game__pb2.Player.SerializeToString,
        response_deserializer=google_dot_rpc_dot_status__pb2.Status.FromString,
        )
    self.Play = channel.unary_unary(
        '/pytorch.elf.game.v1.Game/Play',
        request_serializer=game__pb2.Step.SerializeToString,
        response_deserializer=game__pb2.Reply.FromString,
        )
    self.GenMove = channel.unary_unary(
        '/pytorch.elf.game.v1.Game/GenMove',
        request_serializer=game__pb2.Player.SerializeToString,
        response_deserializer=game__pb2.Reply.FromString,
        )
    self.Pass = channel.unary_unary(
        '/pytorch.elf.game.v1.Game/Pass',
        request_serializer=game__pb2.Player.SerializeToString,
        response_deserializer=game__pb2.Reply.FromString,
        )
    self.Resign = channel.unary_unary(
        '/pytorch.elf.game.v1.Game/Resign',
        request_serializer=game__pb2.Player.SerializeToString,
        response_deserializer=game__pb2.Reply.FromString,
        )
    self.HeartBeat = channel.unary_unary(
        '/pytorch.elf.game.v1.Game/HeartBeat',
        request_serializer=game__pb2.Beat.SerializeToString,
        response_deserializer=game__pb2.BeatReply.FromString,
        )


class GameServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def NewGC(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def FreeGC(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def ClearBoard(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Play(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GenMove(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Pass(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Resign(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def HeartBeat(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GameServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'NewGC': grpc.unary_unary_rpc_method_handler(
          servicer.NewGC,
          request_deserializer=game__pb2.Player.FromString,
          response_serializer=google_dot_rpc_dot_status__pb2.Status.SerializeToString,
      ),
      'FreeGC': grpc.unary_unary_rpc_method_handler(
          servicer.FreeGC,
          request_deserializer=game__pb2.Player.FromString,
          response_serializer=google_dot_rpc_dot_status__pb2.Status.SerializeToString,
      ),
      'ClearBoard': grpc.unary_unary_rpc_method_handler(
          servicer.ClearBoard,
          request_deserializer=game__pb2.Player.FromString,
          response_serializer=google_dot_rpc_dot_status__pb2.Status.SerializeToString,
      ),
      'Play': grpc.unary_unary_rpc_method_handler(
          servicer.Play,
          request_deserializer=game__pb2.Step.FromString,
          response_serializer=game__pb2.Reply.SerializeToString,
      ),
      'GenMove': grpc.unary_unary_rpc_method_handler(
          servicer.GenMove,
          request_deserializer=game__pb2.Player.FromString,
          response_serializer=game__pb2.Reply.SerializeToString,
      ),
      'Pass': grpc.unary_unary_rpc_method_handler(
          servicer.Pass,
          request_deserializer=game__pb2.Player.FromString,
          response_serializer=game__pb2.Reply.SerializeToString,
      ),
      'Resign': grpc.unary_unary_rpc_method_handler(
          servicer.Resign,
          request_deserializer=game__pb2.Player.FromString,
          response_serializer=game__pb2.Reply.SerializeToString,
      ),
      'HeartBeat': grpc.unary_unary_rpc_method_handler(
          servicer.HeartBeat,
          request_deserializer=game__pb2.Beat.FromString,
          response_serializer=game__pb2.BeatReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'pytorch.elf.game.v1.Game', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
